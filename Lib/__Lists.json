{
  "snippets ": [
    {
      "body": "// New Item\nEnter description here...",
      "title": "New Item"
    },
    {
      "body": "\n",
      "title": "Untitled"
    },
    {
      "body": "// Hello World MsgBox\nMsgBox \"Hello, World!\"",
      "title": "Hello World"
    },
    {
      "body": "// Hotkey example - Press F1 to show tooltip\nF1::Tooltip \"You pressed F1!\"",
      "title": "F1 Tooltip Hotkey"
    },
    {
      "body": "// Simple Loop\nLoop 5\n    MsgBox \"Count: \" A_Index",
      "title": "Simple Loop"
    },
    {
      "body": "// Ask user for input\nInputBox userInput, \"Enter Something\", \"Type here...\"\nMsgBox \"You typed: \" userInput",
      "title": "InputBox Example"
    },
    {
      "body": "// Set clipboard text\nA_Clipboard := \"Copied Text\"\nMsgBox \"Clipboard updated!\"",
      "title": "Clipboard Setter"
    }
  ],
  "Links": [
    {
      "body": "// ChatGPT\nhttps://chatgpt.com/",
      "title": "ChatGPT"
    },
    {
      "body": "// Gemini\nhttps://gemini.google.com/u/2/app",
      "title": "Gemini"
    },
    {
      "body": "// Claude\nhttps://claude.ai/new",
      "title": "Claude"
    },
    {
      "body": "// Deepseek\nhttps://chat.deepseek.com/",
      "title": "Deepseek"
    },
    {
      "body": "// GitHub\nhttps://www.github.com",
      "title": "GitHub"
    },
    {
      "body": "// AHK\nhttps://www.autohotkey.com/boards/viewforum.php?f=83",
      "title": "AHK"
    },
    {
      "body": "// Reddit\nhttps://www.reddit.com",
      "title": "Reddit"
    },
    {
      "body": "// YouTube\nhttps://www.youtube.com",
      "title": "YouTube"
    },
    {
      "body": "// Google Maps\nhttps://www.google.com/maps",
      "title": "Google Maps"
    }
  ],
  "Prompts": [
    {
      "body": "// Prompt Clipboard\nCreate a clipboard text editor that:\n- Opens the GUI when the script starts\n- Shows the clipboard contents when the GUI opens in an edit box without the text selected\n- Create three buttons to change the case of the text\n- Save the newly edited version to the users clipboard",
      "title": "Prompt Clipboard"
    },
    {
      "body": "// TestPrompt\nImplement an AutoHotkey v2 class that monitors a directory for file changes and triggers callbacks when files are created, modified, or deleted.",
      "title": "TestPrompt"
    },
    {
      "body": "// AHK Script\nCreate an AutoHotkey v2 script that displays current CPU usage as a tooltip that updates every second.",
      "title": "AHK Script"
    },
    {
      "body": "// Clipboard\nCreate a clipboard text editor that:\n- Opens the GUI when the script starts\n- Shows the clipboard contents when the GUI opens in an edit box without the text selected\n- Create three buttons to change the case of the text\n- Save the newly edited version to the users clipboard",
      "title": "Clipboard"
    },
    {
      "body": "// Clipboard Editor\nCreate an AutoHotkey v2 script that displays current CPU usage as a tooltip that updates every second.",
      "title": "Clipboard Editor"
    },
    {
      "body": "// Clipboard Manager\nCreate a clipboard text editor that:\n- Opens the GUI when the script starts\n- Shows the clipboard contents when the GUI opens in an edit box without the text selected\n- Create three buttons to change the case of the text \n- Save the newly edited version to the users clipboard",
      "title": "Clipboard Manager"
    },
    {
      "body": "// File System Watcher\nImplement an AutoHotkey v2 class that monitors a directory for file changes and triggers callbacks when files are created, modified, or deleted.",
      "title": "File System Watcher"
    },
    {
      "body": "// Hotkey Toggle Function\nWrite a function in AutoHotkey v2 that can toggle any hotkey on and off and display a brief tooltip when the state changes.",
      "title": "Hotkey Toggle Function"
    },
    {
      "body": "// LinkManager\nCreate an AutoHotkey v2 script called **Link Manager** that:\n- Stores a multiline string `g_Links` containing several URLs\n- Parses that string on startup into an array with fields `url`, `valid`, and `displayName`\n- Builds a GUI with a ListView (or ListBox) showing each link and a status bar for details\n- Opens the selected link in Microsoft Edge on double-click or Enter, adding https:// if missing (fallback to default browser if Edge fails)\n- Validates URLs with the regex `i)^(https?:\\/\\/)?([\\w.-]+)\\.([a-z.]{2,6})(\\/[\\w.-]*)*\\/?\n- Handles errors such as empty list or invalid URL and shows tooltips or status messages\n- Uses clean AHK v2 syntax, modular functions, and proper event binding",
      "title": "LinkManager"
    },
    {
      "body": "// SnippetManager\nCreate an AutoHotkey v2 script for a Snippet Manager tool with the following features:\n- Store a collection of predefined text snippets (like greetings, closings, reminders)\n- Display them in a listbox GUI\n- Allow copying the selected snippet to clipboard\n- Option to send the snippet directly to the previous active window\n- Show temporary tooltips for user feedback\n\nAdditional Requirements:\n- Store snippets in a static Map\n- Track the previously active window\n- Have a clean, resizable GUI\n- Display tooltips that automatically disappear\n\nInclude these specific snippets: \"Greeting\", \"Closing\", \"Reminder\", and \"Follow-up\" with appropriate text content for each.\nMake sure to follow AutoHotkey v2 best practices with proper event binding, control management, and variable scoping.",
      "title": "SnippetManager"
    },
    {
      "body": "// Pure Function - Array Filtering\nWrite *just* an AHK v2 function named `KeepEven(nums)` that takes an array of integers and returns a new array containing only the even numbers. Do not print anything. Use 1-based indexing.\nQuantifiable check: Run `KeepEven([1,2,5,8,10])` \u00E2\u2021\u2019 expect `[2,8,10]`.",
      "title": "Pure Function - Array Filtering"
    },
    {
      "body": "// OOP Basics - Immutable Class\nCreate a minimal class `Point2D(x, y)` with read-only properties `X` and `Y` and a method `DistanceTo(other)`. No external helpers, pure v2 syntax.\nQuantifiable check: `p1 := Point2D(0,0), p2 := Point2D(3,4)` `p1.DistanceTo(p2)` \u00E2\u2021\u2019 `5`.",
      "title": "OOP Basics - Immutable Class"
    },
    {
      "body": "// Map Usage & Error Handling\nImplement `SafeGet(map, key, default)` that returns `map[key]` if present, otherwise `default`. Throw no errors.\nQuantifiable check: `SafeGet(Map(\"a\",1),\"b\",42)` \u00E2\u2021\u2019 `42`.",
      "title": "Map Usage & Error Handling"
    },
    {
      "body": "// String & Regex Skills\nWrite a function `ExtractEmails(text)` that returns an array of all email addresses in `text` using a single PCRE regex.\nQuantifiable check: Input string containing 3 emails \u00E2\u2020\u2019 output array length = 3.",
      "title": "String & Regex Skills"
    },
    {
      "body": "// Fat-Arrow Property\nDefine class `Countdown(n)` with a fat-arrow read-only property `SecondsLeft` and a method `Tick()` that decrements internal counter until zero.\nQuantifiable check: After five calls to `Tick()` starting from `Countdown(5)`, `SecondsLeft` \u00E2\u2021\u2019 `0`.",
      "title": "Fat-Arrow Property"
    },
    {
      "body": "// Timer & Tooltip Event Handling\nProduce a script that shows a tooltip counting 1 \u00E2\u2020\u2019 5 at one-second intervals, then automatically clears the tooltip and exits.\nQuantifiable check: Observe five distinct tooltips, script terminates within 6 s.",
      "title": "Timer & Tooltip Event Handling"
    },
    {
      "body": "// GUI Layout Rules\nCreate a class-based GUI with two sections. Section 1: label + edit. Section 2: 'OK' button that shows MsgBox with the edit's text. Follow `xm Section` reset pattern, no `Section w###`.\nQuantifiable check: Clicking **OK** yields a MsgBox whose content matches the edit field.",
      "title": "GUI Layout Rules"
    },
    {
      "body": "// File I/O & CSV\nWrite a function `SumCsvColumn(path, columnIndex)` that reads a UTF-8 CSV (no quotes, comma-delimited) and returns the numeric sum of the given 1-based column.\nQuantifiable check: Provide test file; compare return value to known total.",
      "title": "File I/O & CSV"
    },
    {
      "body": "// Inheritance & Polymorphism\nBase class `Shape` with abstract method `Area()`. Subclasses `Circle(r)` and `Rectangle(w,h)` override `Area`. No global variables.\nQuantifiable check: `Circle(1).Area()` \u00E2\u2021\u2019 `\u00CF\u20AC`; `Rectangle(3,4).Area()` \u00E2\u2021\u2019 `12`.",
      "title": "Inheritance & Polymorphism"
    },
    {
      "body": "// Dynamic Hotkeys\nCreate `HotkeyManager()` class that accepts a map of hotkey \u00E2\u2020\u2019 message, registers them at construction, and shows the mapped message in a tooltip when pressed. Include `DisableAll()` to unregister.\nQuantifiable check: Pressing each hotkey displays correct tooltip; after `DisableAll()` none trigger.",
      "title": "Dynamic Hotkeys"
    }
  ],
  "Snippets": [
    {
      "body": "// claude --dangerously-skip-permissions\nclaude --dangerously-skip-permissions",
      "title": "claude --dangerously-skip-permissions"
    },
    {
      "body": "// Test\nTest 1\nTest 2\nTest 3",
      "title": "Test"
    },
    {
      "body": "// Test\nTest 1\nTest 2\nTest 3",
      "title": "Test"
    }
  ],
  "_metadata": {
    "customCategories": [],
    "lastModified": "2025-08-06",
    "version": "1.0"
  }
}
